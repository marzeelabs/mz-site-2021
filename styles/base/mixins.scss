// sass-lint:disable
@use 'variables'as *;

@mixin breakpoint($device) {
  @if $device==desktop-xxxlarge {
    @media (min-width: map-get($breakpoints, desktop-xxxlarge)) {
      @content;
    }
  }

  @else if $device==desktop-xxlarge {
    @media (min-width: map-get($breakpoints, desktop-xxlarge)) {
      @content;
    }
  }

  @else if $device==desktop-xlarge {
    @media (min-width: map-get($breakpoints, desktop-xlarge)) {
      @content;
    }
  }

  @else if $device==desktop-midlarge {
    @media (min-width: map-get($breakpoints, desktop-midlarge)) {
      @content;
    }
  }

  @else if $device==until-desktop-midlarge {
    @media (max-width: calc(#{map-get($breakpoints, desktop-midlarge)} - 1px)) {
      @content;
    }
  }

  @else if $device==desktop-large {
    @media (min-width: map-get($breakpoints, desktop-large)) {
      @content;
    }
  }

  @else if $device==until-desktop-large {
    @media (max-width: calc(#{map-get($breakpoints, desktop-large)} - 1px)) {
      @content;
    }
  }

  @else if $device==desktop {
    @media (min-width: map-get($breakpoints, desktop)) {
      @content;
    }
  }

  @else if $device==until-desktop {
    @media (max-width: calc(#{map-get($breakpoints, desktop)} - 1px)) {
      @content;
    }
  }

  @else if $device==only-tablet-medium {
    @media (min-width: map-get($breakpoints, tablet)) and (max-width: calc(#{map-get($breakpoints, desktop)} - 1px)) {
      @content;
    }
  }

  @else if $device==only-tablet {
    @media (min-width: map-get($breakpoints, tablet-small)) and (max-width: calc(#{map-get($breakpoints, desktop)} - 1px)) {
      @content;
    }
  }

  @else if $device==tablet-large {
    @media (min-width: map-get($breakpoints, tablet-large)) {
      @content;
    }
  }

  @else if $device==until-tablet-large {
    @media (max-width: calc(#{map-get($breakpoints, tablet-large)} - 1px)) {
      @content;
    }
  }

  @else if $device==tablet {
    @media (min-width: map-get($breakpoints, tablet)) {
      @content;
    }
  }

  @else if $device==until-tablet {
    @media (max-width: calc(#{map-get($breakpoints, tablet)} - 1px)) {
      @content;
    }
  }

  @else if $device==tablet-small {
    @media (min-width: map-get($breakpoints, tablet-small)) {
      @content;
    }
  }

  @else if $device==mobile {
    @media (max-width: calc(#{map-get($breakpoints, tablet-small)} - 1px)) {
      @content;
    }
  }

  @else if $device==mobile-small {
    @media (max-width: calc(#{map-get($breakpoints, mobile-small)} - 1px)) {
      @content;
    }
  }
}

//
// List reset
@mixin reset-list {
  margin: 0;
  padding: 0;
  list-style: none outside none;
  list-style-image: none;

  & li {
    list-style: none outside none;
  }
}

@mixin visually-hidden {
  position: absolute !important;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  border: 0;
  word-wrap: normal;
}

// visually-hidden--off()
//
// Turns off the visually-hidden effect.
//
@mixin visually-hidden--off {
  position: static !important;
  width: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  clip: auto;
}

//
// clearfix
@mixin clearfixer {

  &:before,
  &:after {
    content: ''; // 1
    display: table; // 2
  }

  &:after {
    clear: both;
  }
}

// textstyles
@mixin textstyle($textstyle) {
  @if $textstyle==heading1 {
    font-size: var(--fs-h1);
    font-weight: var(--fw-bold);
    line-height: var(--ln-h1);
  }

  @else if $textstyle==heading2 {
    font-size: var(--fs-h2);
    font-weight: var(--fw-bold);
    line-height: var(--ln-h2);
  }

  @else if $textstyle==heading3 {
    font-size: var(--fs-h3);
    font-weight: var(--fw-bold);
    line-height: var(--ln-h3);
  }

  @else if $textstyle==heading4 {
    font-size: var(--fs-h4);
    font-weight: var(--fw-bold);
    line-height: var(--ln-h4);
  }

  @else if $textstyle==heading5 {
    font-size: var(--fs-h5);
    font-weight: var(--fw-bold);
    line-height: var(--ln-h5);
  }

  @else if $textstyle==heading6 {
    font-size: var(--fs-h6);
    font-weight: var(--fw-bold);
    line-height: var(--ln-h6);
  }

  @else if $textstyle==body {
    font-size: var(--fs-body);
    font-weight: var(--fw-regular);
    line-height: var(--ln-body);
  }
}
